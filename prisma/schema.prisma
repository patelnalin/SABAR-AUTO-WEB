// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.1.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Company {
  id                 String @id @default(uuid())
  companyName        String
  registrationNumber String?
  gstNumber          String?
  industryType       String
  address            String
  city               String
  state              String
  country            String
  pincode            String
  email              String @unique
  phone              String
  website            String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Branch {
  id                  String  @id @default(uuid())
  branchCode          String  @unique
  branchName          String
  address             String
  city                String
  state               String
  pincode             String
  phone               String
  email               String  @unique
  managerName         String?
  openingHours        String?
  gstin               String?
  bankAccount         String?
  activeStatus        Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Supplier {
  id            String  @id @default(uuid())
  supplierName  String
  contactPerson String?
  email         String  @unique
  phone         String
  address       String
  city          String
  state         String
  pincode       String
  gstin         String?
  status        String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Brand {
  id                  String  @id @default(uuid())
  brandName           String  @unique
  countryOfOrigin     String
  establishedYear     Int
  headquarterLocation String?
  status              String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Model {
  id                String   @id @default(uuid())
  modelCode         String   @unique
  modelName         String
  brandName         String
  fuelType          String
  seatingCapacity   Int?
  engineCapacity    Int?
  transmissionType  String
  priceRange        String?
  launchYear        Int
  status            String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Color {
    id String @id @default(uuid())
    colorName String
    colorCode String?
    finishType String
    status String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Address {
    id String @id @default(uuid())
    village String
    post String
    city String
    state String
    pincode String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model FinancialYear {
    id String @id @default(uuid())
    yearName String @unique
    startDate DateTime
    endDate DateTime
    status String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model InsuranceCompany {
    id                  String   @id @default(uuid())
    companyName         String
    companyCode         String   @unique
    registrationNumber  String?
    licenseNumber       String?
    contactPerson       String?
    contactNumber       String
    email               String
    website             String?
    headOfficeAddress   String?
    city                String
    state               String
    pinCode             String
    branchesCount       Int?
    servicesOffered     String
    status              String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model FinanceCompany {
    id                  String   @id @default(uuid())
    companyName         String
    registrationNumber  String?
    licenseType         String
    panNumber           String?
    gstNumber           String?
    incorporationDate   DateTime?

    contactPersonName       String?
    contactPersonDesignation String?
    mobileNumber        String
    alternatePhoneNumber String?
    email               String
    website             String?

    headOfficeAddress   String
    city                String
    state               String
    pinCode             String
    country             String

    branchCount         Int?
    status              String
    notes               String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model Voucher {
  id            String   @id @default(uuid())
  voucherNumber String
  voucherDate   DateTime
  voucherType   String
  accountName   String
  amount        Float
  paymentMode   String?
  referenceNo   String?
  narration     String
  status        String
  approvedBy    String?
  createdBy     String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Payment {
    id String @id @default(uuid())
    paymentType String
    paymentDate DateTime
    customerName String
    vehicleModel String?
    chassisNo String?
    engineNo String?
    amount Float
    paymentMode String
    transactionId String?
    chequeNumber String?
    paymentStatus String
    policyOrFileNo String?
    expiryDate DateTime?
    companyOrAuthority String?
    invoiceNumber String
    balanceDue Float?
    notes String?
    createdBy String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model InsurancePolicy {
  id                 String   @id @default(uuid())
  policyNumber       String   @unique
  policyType         String
  insuranceCompany   String
  policyHolderName   String
  phoneNumber        String
  email              String?
  startDate          DateTime
  endDate            DateTime
  premiumAmount      Float
  sumInsured         Float?
  paymentMode        String
  agentName          String?
  renewalReminderDate DateTime?
  notes              String?
  status             String
  renewalStatus      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MeetarBill {
    id String @id @default(uuid())
    billDate DateTime
    customerName String
    mobile String
    village String
    city String
    vehicleModel String
    chassisNo String
    engineNo String
    certificateNo String
    meterNo String?
    totalAmount Float
    discount Float
    sgst Float
    cgst Float
    grandTotal Float
    amount Float
    products MeetarBillProduct[]
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MeetarBillProduct {
    id String @id @default(uuid())
    productName String
    qty Int
    rate Float
    amount Float
    bill MeetarBill @relation(fields: [meetarBillId], references: [id], onDelete: Cascade)
    meetarBillId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
